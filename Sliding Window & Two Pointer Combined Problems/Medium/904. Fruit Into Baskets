https://leetcode.com/problems/fruit-into-baskets/description/



class Solution {
public:
    int totalFruit(vector<int>& fruits) {
        int mx = INT_MIN;
        int n = fruits.size();

        unordered_map<int, int> mpp;

        int left = 0, right = 0;

        for(left = 0, right = 0 ; right < n ; right++) {
            mpp[fruits[right]]++;

            while(left <= right && mpp.size() > 2) {
                mpp[fruits[left]]--;
                if(mpp[fruits[left]] == 0) mpp.erase(fruits[left]);
                left++;
            }

            mx = max(mx, right - left + 1);
        }

        return mx;
    }
};
