https://leetcode.com/problems/count-square-submatrices-with-all-ones/description/



class Solution {
public:
    int countSquares(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        int total = 0;
        vector<vector<int>> cache(m, vector<int>(n, 0));

        for(int i = 0 ; i < m ; i++) {
            cache[i][0] = matrix[i][0];
            total += cache[i][0];
        }
        for(int j = 1 ; j < n ; j++) {
            cache[0][j] = matrix[0][j];
            total += cache[0][j];
        }

        for(int i = 1 ; i < m ; i++) {
            for(int j = 1 ; j < n ; j++) {
                if(matrix[i][j] == 1) {
                    cache[i][j] += 1 + min(cache[i-1][j-1], min(cache[i-1][j], cache[i][j-1]));
                    total += cache[i][j];
                }
            }
        }
        return total;
    }
};
