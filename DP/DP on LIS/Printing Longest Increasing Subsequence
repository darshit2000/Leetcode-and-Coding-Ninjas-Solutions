https://www.naukri.com/code360/problems/printing-longest-increasing-subsequence_8360670?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&count=25&page=10&search=&sort_entity=order&sort_order=ASC&leftPanelTabValue=PROBLEM



vector<int> printingLongestIncreasingSubsequence(vector<int> arr, int n) {
	// Write your code here
	vector<int> dp(n, 1), backtrack(n);
	int mx = INT_MIN, mxIndex = -1;

	for(int i = 0 ; i < n ; i++) {
		backtrack[i] = i;
		for(int j = 0 ; j < i ; j++) {
			if(arr[j] < arr[i]) {
				if(dp[j] + 1 > dp[i]) {
					dp[i] = 1 + dp[j];
					backtrack[i] = j;
				}
			}
		}
		if(dp[i] > mx) {
			mx = dp[i];
			mxIndex = i;
		}
	}

	vector<int> ans;
	int idx = mxIndex;
	ans.push_back(arr[idx]);
	while(backtrack[idx] != idx) {
		idx = backtrack[idx];
		ans.insert(ans.begin(), arr[idx]);
	}
	return ans;
}
