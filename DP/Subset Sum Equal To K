https://www.naukri.com/code360/problems/subset-sum-equal-to-k_1550954?leftPanelTabValue=PROBLEM



#include <bits/stdc++.h> 

// bottom up with space optimization

// bool subsetSumToK(int n, int k, vector<int> &arr) {
//     // Write your code here.

//     vector<bool>  dp(k+1, false);
//     dp[0] = true;
    
//     if(arr[0] <= k) dp[arr[0]] = true;

//     for(int i = 1 ; i < n ; i++) {
//         vector<bool> temp(k+1, false);
//         temp[0] = true;
//         for(int s = 1 ; s <= k ; s++) {
//             bool notTake = dp[s];
//             bool take = false;
//             if(arr[i] <= s) {
//                 take = dp[s - arr[i]];
//             }

//             temp[s] = take | notTake;
//         }
//         dp = temp;
//     }
//     return dp[k];
// }



// bottom up

bool subsetSumToK(int n, int k, vector<int> &arr) {
    // Write your code here.

    vector<vector<bool>>  dp(n, vector<bool>(k+1, false));

    for(int i = 0 ; i < n ; i++) dp[i][0] = true;
    
    if(arr[0] <= k) dp[0][arr[0]] = true;

    // Or can also do like below:
    // for(int s = 0 ; s <= k ; s++) {
    //     if(s == arr[0]) {
    //         dp[0][s] = true;
    //     }
    // }

    for(int i = 1 ; i < n ; i++) {
        for(int s = 1 ; s <= k ; s++) {
            bool notTake = dp[i-1][s];
            bool take = false;
            if(arr[i] <= s) {
                take = dp[i-1][s - arr[i]];
            }

            dp[i][s] = take | notTake;
        }
    }
    return dp[n-1][k];
}



// top down

// bool subsetSumToK(int n, int k, vector<int> &arr) {
//     // Write your code here.

//     vector<vector<int>>  dp(n, vector<int>(k+1, -1));

//     auto solve = [&] (auto& solve, int i, int sum) -> bool {
//         if(i >= n) {
//             if(sum == k) return true;
//             return false;
//         }
//         if(sum > k) return false;

//         if(dp[i][sum] != -1) return dp[i][sum];

//         if(solve(solve, i + 1, sum + arr[i])) {
//             dp[i][sum] = 1;
//             return true;
//         }
//         if(solve(solve, i + 1, sum)) {
//             dp[i][sum] = 1;
//             return true;
//         }
//         dp[i][sum] = 0;
//         return false;
//     };

//     if(solve(solve, 0, 0)) return true;
//     return false;
// }
