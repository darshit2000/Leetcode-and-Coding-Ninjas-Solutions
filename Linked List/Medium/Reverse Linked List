/****************************************************************

    Following is the class structure of the Node class:

        class Node
        {
        public:
            int data;
            Node *next;
            Node()
            {
                this->data = 0;
                next = NULL;
            }
            Node(int data)
            {
                this->data = data;
                this->next = NULL;
            }
            Node(int data, Node* next)
            {
                this->data = data;
                this->next = next;
            }
        };
        

*****************************************************************/

// Recursion 1

Node* reverseLinkedList(Node *head)
{
    // Write your code here
    if(head == NULL || head->next == NULL) return head;
    Node* newHead = reverseLinkedList(head->next);
    Node* front = head->next;
    front->next = head;
    head->next = NULL;
    return newHead;
}



// Recursive 2

// void rev(Node* &head, Node* prevNode, Node* currNode) {
//     if(currNode == NULL) {
//         head = prevNode;
//         return;
//     }
//     rev(head, currNode, currNode->next);
//     currNode->next = prevNode;
// }

// Node* reverseLinkedList(Node *head)
// {
//     // Write your code here
//     Node* prevNode = NULL;
//     Node* currNode = head;
//     rev(head, prevNode, currNode);
//     return head;
// }



// Iterative

// Node* reverseLinkedList(Node *head)
// {
//     // Write your code here
//     Node* currNode = head;
//     Node* prevNode = NULL;
//     Node* nextNode = currNode->next;
//     while(currNode->next != NULL) {
//         currNode->next = prevNode;
//         prevNode = currNode;
//         currNode = nextNode;
//         nextNode = currNode->next;
//     }
//     currNode->next = prevNode;
//     return currNode;
// }
