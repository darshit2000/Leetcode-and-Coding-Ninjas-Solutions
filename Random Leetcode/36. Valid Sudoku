class Solution {
public:

    bool isValid(vector<vector<char>>& board, int row, int col) {
        int value = board[row][col] - '0';
        int count = 0;

        for(int i = 0 ; i < board[0].size() ; i++) {

            if(value == (board[row][i] - '0')) count++;
            if(value == (board[i][col] - '0')) count++;
            if(value == (board[3*(row/3) + i/3][3*(col/3) + i%3] - '0')) count++;
        }

        if(count > 3) return false;
        return true;
    }

    bool isValidSudoku(vector<vector<char>>& board) {
        for(int row = 0 ; row < 9 ; row++) {
            for(int col = 0 ; col < 9 ; col++) {
                if(board[row][col] != '.') {
                    if(isValid(board, row, col) == false) return false;
                }
            }
        }
        return true;
    }
};
