/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(!head) return NULL;
        if(!head->next) return head;

        ListNode* slow = head;
        ListNode* fast = slow->next;
        ListNode* temp = NULL;
        head = fast;

        while(slow && fast) {
            if(temp) temp->next = fast;
            slow->next = fast->next;
            fast->next = slow;
            temp = slow;
            slow = slow->next;
            if(slow) fast = slow->next;
        }

        return head;
    }
};
