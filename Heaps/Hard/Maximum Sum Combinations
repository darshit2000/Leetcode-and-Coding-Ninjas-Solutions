vector<int> Solution::solve(vector<int> &A, vector<int> &B, int C) {
    priority_queue<pair<int, pair<int,int>>> pq;
    set<pair<int,int>> s;
    vector<int> ans;
    int N = A.size();
    
    sort(A.begin(), A.end());
    sort(B.begin(), B.end());
    
    s.insert({N-1,N-1});
    pq.push({A[N-1] + B[N-1] , {N-1,N-1}});
        
    while(C--) {
        int val = pq.top().first;
        ans.push_back(val);
        
        pair<int,int> p = pq.top().second;
        int i = p.first;
        int j = p.second;
        
        pq.pop();
        
        if(i-1 >= 0 && (s.find({i-1,j}) == s.end())) {
            pq.push({A[i-1] + B[j],{i-1,j}});
            s.insert({i-1,j});
        }
        if(j-1 >= 0 && (s.find({i,j-1}) == s.end())) {
            pq.push({A[i] + B[j-1],{i,j-1}});
            s.insert({i,j-1});
        }
    }
    return ans;
}
