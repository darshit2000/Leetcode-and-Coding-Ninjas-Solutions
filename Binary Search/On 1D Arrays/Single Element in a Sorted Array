int singleNonDuplicate(vector<int>& arr)
{
	// Write your code here
	int n = arr.size();
	int low = 0;
	int high = n-1;
	while(low <= high) {
		int mid = (low + high)/2;
		
		if(mid == 0 && arr[mid] != arr[mid+1]) return arr[low];
		else if(mid == n-1 && arr[mid-1] != arr[mid]) return arr[high];
		else if(arr[mid-1] != arr[mid] && arr[mid] != arr[mid+1]) return arr[mid];

		if(arr[mid] == arr[mid-1] && ((mid-1)%2) == 0) {
			low = mid + 1;
		} else if(arr[mid] == arr[mid-1] && ((mid-1)%2) == 1) {
			high = mid - 1;
		} else if(arr[mid] == arr[mid+1] && ((mid+1)%2) == 0) {
			high = mid - 1;
		} else if(arr[mid] == arr[mid+1] && ((mid+1)%2) == 1) {
			low = mid + 1;
		}
	}
	return -1;
}
