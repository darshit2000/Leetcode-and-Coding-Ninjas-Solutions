// #include <bits/stdc++.h>

// int count(vector<int>& arr, int n, int x) {
// 	// Write Your Code Here
// 	int count = 0;
// 	int lowerBoundIndex = lower_bound(arr.begin(), arr.end(), x) - arr.begin();
// 	int upperBoundIndex = upper_bound(arr.begin(), arr.end(), x) - arr.begin();
// 	count = upperBoundIndex - lowerBoundIndex;
// 	return count;
// }


// OR


#include <bits/stdc++.h>

int count(vector<int>& arr, int n, int x) {
	// Write Your Code Here
	int count = 0;
	int lowerBoundIndex = -1;
	int upperBoundIndex = -1;
	
	int low = 0;
	int high = n-1;
	while(low <= high) {
		int mid = (low + high)/2;
		if(arr[mid] == x) {
			lowerBoundIndex = mid;
			high = mid - 1;
		} else if(arr[mid] > x) {
			high = mid - 1;
		} else if(arr[mid] < x) {
			low = mid + 1;
		}
	}

	if(lowerBoundIndex == -1) return 0;

	low = 0;
	high = n-1;
	while(low <= high) {
		int mid = (low + high)/2;
		if(arr[mid] == x) {
			upperBoundIndex = mid;
			low = mid + 1;
		} else if(arr[mid] > x) {
			high = mid - 1;
		} else if(arr[mid] < x) {
			low = mid + 1;
		}
	}
	
	count = upperBoundIndex - lowerBoundIndex + 1;
	return count;
}
