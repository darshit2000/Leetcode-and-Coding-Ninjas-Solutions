int findPeakElement(vector<int> &arr) {
    // Write your code here
    int n = arr.size();

    if(n == 1) return 0;

    if(arr[0] > arr[1]) return 0;
    else if(arr[n-1] > arr[n-2]) return n-1;

    int low = 1;
    int high = n-2;
     
    while(low <= high) {
        int mid = (low + high)/2;

        if(arr[mid] > arr[mid-1] && arr[mid] > arr[mid+1]) return mid;
        // 1 2 3 5 4
        else if(arr[mid+1] > arr[mid]) {
            low = mid + 1;
        } 
        // 1 5 2 1 3
        else if(arr[mid-1] > arr[mid]) {
            high = mid - 1;
        } 
        // 1 5 1 2 1
        else if(arr[mid] < arr[mid-1] && arr[mid] < arr[mid+1]) {
            low = mid + 1;
            // OR high = mid - 1;
        }
    } 
    return -1;
}



// int findPeakElement(vector<int> &arr) {
//     // Write your code here
//     int n = arr.size();
//     int i = 1;
//     while(i < n-1) {
//         if(arr[i-1] < arr[i] && arr[i+1] < arr[i]) {
//             return i;
//         }
//         i++;
//     }
    
//     if(arr[0] > arr[1]) return 0;
//     else return n-1;
// }
