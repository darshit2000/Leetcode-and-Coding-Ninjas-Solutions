#include <bits/stdc++.h>

uint32_t solve(vector<int> &boards, int maxCost) {
    uint32_t totalPainters = 1;
    uint32_t totalCost = 0;
    uint32_t n = boards.size();
    for(int i = 0 ; i < n ; i++) {
        totalCost += boards[i];
        if(totalCost <= maxCost) continue;
        else if(totalCost > maxCost) {
            totalPainters++;
            totalCost = boards[i];
        }
    }
    return totalPainters;
}

int findLargestMinDistance(vector<int> &boards, int k)
{
    //    Write your code here.
    uint32_t low = *max_element(boards.begin(), boards.end());
    uint32_t high = accumulate(boards.begin(), boards.end(), 0);
    uint32_t ans = low;

    while(low <= high) {
        uint32_t mid = (low + high)/2;
        uint32_t totalPainters = solve(boards, mid);
        if(totalPainters <= k) {
            ans = mid;
            high = mid - 1;
        } else if(totalPainters > k) {
            low = mid + 1;
        } 
    }
    return ans;
}
