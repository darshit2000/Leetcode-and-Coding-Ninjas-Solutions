class Solution {
public:
    int solve(vector<int>& nums, int maxSum) {
        int nonZeroSubarrays = 1;
        int sum = nums[0];
        for(int i = 1 ; i < nums.size() ; i++) {
            sum += nums[i];
            if(sum <= maxSum) continue;
            else if(sum > maxSum) {
                nonZeroSubarrays++;
                sum = nums[i];
            }
        }
        return nonZeroSubarrays;
    }

    int splitArray(vector<int>& nums, int k) {
        int low = *max_element(nums.begin(), nums.end());
        int high = accumulate(nums.begin(), nums.end(), 0);
        int ans = low;

        while(low <= high) {
            int mid = (low + high)/2;
            int nonZeroSubarrays = solve(nums, mid);
            if(nonZeroSubarrays == k) {
                ans = mid;
                high = mid - 1;
            } else if(nonZeroSubarrays > k) {
                low = mid + 1;
            } else if(nonZeroSubarrays < k) {
                high = mid - 1;
            }
        }
        return ans;
    }
};
