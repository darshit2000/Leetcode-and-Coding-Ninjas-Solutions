https://leetcode.com/problems/compare-version-numbers/description/?envType=daily-question&envId=2024-05-03



// method 1

class Solution {
public:
    int compareVersion(string version1, string version2) {
        int n = version1.length();
        int m = version2.length();

        int i = 0 , j = 0;

        while(i < n || j < m) {
            long long t1 = 0, t2 = 0;

            while(i < n && version1[i] != '.') {
                t1 += t1*10 + (version1[i] - '0');
                i++;
            }
            while(j < m && version2[j] != '.') {
                t2 += t2*10 + (version2[j] - '0');
                j++;
            }
            if(t1 < t2) return -1;
            else if(t1 > t2) return 1;

            if(i < n) i++;
            if(j < m) j++;
        }

        return 0;
    }
};


// method 2

// class Solution {
// public:
//     int compareVersion(string version1, string version2) {
//         int n = version1.length();
//         int m = version2.length();

//         int i = 0 , j = 0;

//         while(i < n && j < m) {
//             string t1, t2;
//             while(i < n && version1[i] != '.') {
//                 t1 += version1[i];
//                 i++;
//             }
//             while(j < m && version2[j] != '.') {
//                 t2 += version2[j];
//                 j++;
//             }
//             if(stoi(t1) < stoi(t2)) return -1;
//             else if(stoi(t1) > stoi(t2)) return 1;
//             i++;
//             j++;
//         }

//         while(i < n) {
//             if(version1[i] != '0' && version1[i] != '.') return 1;
//             i++;
//         }
//         while(j < m) {
//             if(version2[j] != '0' && version2[j] != '.') return -1;
//             j++;
//         }

//         return 0;
//     }
// };
