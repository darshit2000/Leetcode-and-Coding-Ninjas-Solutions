https://leetcode.com/problems/sum-root-to-leaf-numbers/description/?envType=daily-question&envId=2024-04-15



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isLeaf(TreeNode* node) {
        if(node && !node->left && !node->right) return true;
        return false;
    }
    void getSum(TreeNode* node, int &ans, int curr) {
        if(isLeaf(node)) {
            curr = curr*10 + node->val;
            ans += curr;
            return;
        }

        curr = curr*10 + node->val;
        if(node->left) getSum(node->left, ans, curr);
        if(node->right) getSum(node->right, ans, curr);
    }
    int sumNumbers(TreeNode* root) {
        int ans = 0;
        getSum(root, ans, 0);
        return ans;
    }
};
