https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency/description/?envType=daily-question&envId=2024-03-28



class Solution {
public:
    int maxSubarrayLength(vector<int>& nums, int k) {
        unordered_map<int,int> mpp;
        int n = nums.size();
        int mx = 0;

        for(int left = 0, right = 0 ; right < n ; right++) {
            mpp[nums[right]]++;

            while(mpp[nums[right]] > k) {
                mpp[nums[left]]--;
                left++;
            }

            mx = max(mx, right - left + 1);
        }
        return mx;
    }
};
