/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* fast = head;
        ListNode* slow = head;

        for(int i = 0 ; i < n ; i++) {
            fast = fast->next;
        }
        if(fast == NULL) {
            head = head->next;
            return head;
        }

        while(fast->next) {
            slow = slow->next;
            fast = fast->next;
        }

        slow->next = slow->next->next;
        return head;
    }
};







// class Solution {
// public:
//     ListNode* removeNthFromEnd(ListNode* head, int n) {
//         if(!head) return NULL;
//         int count = 0;
//         ListNode* curr = head;
//         while(curr) {
//             curr = curr->next;
//             count++;
//         }

//         curr = head;
//         int desired = count - n;
//         if(desired == 0) {
//             head = head->next;
//             return head;
//         }
//         while(desired > 1) {
//             desired--;
//             curr = curr->next;
//         }
//         curr->next = curr->next->next;
//         return head;
//     }
// };
