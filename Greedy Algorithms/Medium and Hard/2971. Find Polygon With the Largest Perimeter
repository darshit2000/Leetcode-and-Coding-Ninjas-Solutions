class Solution {
public:
    long long largestPerimeter(vector<int>& nums) {
        int n = nums.size();
        if(n < 3) return -1;

        sort(nums.begin(), nums.end());
        // for(int i : nums) cout << i << ",";

        if(n == 3) {
            if(nums[0]+nums[1] > nums[2]) return (nums[0]+nums[1]+nums[2]);
            else return -1;
        }
        long long p = (long long)accumulate(nums.begin(), nums.end(), (long long)0) - (long long)nums[n-1];

        int i = n-1;
        while(i-1 >= 0 && p <= nums[i]) {
            p -= (long long)nums[i-1];
            i--;
        }
        if(i >= 2 && i < n) return (p+nums[i]);
        return -1;
    }
};
