class Solution {
public:
    int furthestBuilding(vector<int>& heights, int bricks, int ladders) {
        int n = heights.size();
        int total = 0;
        int currBricksUsed = 0;
        priority_queue<int, vector<int>, greater<int>> minHeap;

        for(int i = 1 ; i < n ; i++) {
            if(heights[i] <= heights[i-1]) continue;
            else {
                minHeap.push(heights[i] - heights[i-1]);
                if(minHeap.size() > ladders) {
                    if(currBricksUsed + minHeap.top() <= bricks) {
                        currBricksUsed += minHeap.top();
                        minHeap.pop();
                    } else {
                        return i-1;
                    }
                }
            }
        } 
        return n-1;
    }
};
