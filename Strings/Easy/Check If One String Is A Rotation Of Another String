int isCyclicRotation(string &p, string &q) 
{
    // Write your code here
    p = p + p;
    int i = 0;
    int j = 0;
    int n = p.size();

    while(i < n){
        if(p[i] == q[j]) {
            i++;
            j++;
            if(j == q.size()) return 1;
            continue;
        }
        // Seen some pattern before, but now it broke, so go to start
        else if (q[j] != p[i] && j != 0){
            j = 0;
            continue;
        } 
        // No pattern seen in the past, so just increment i and find the starting point of the pattern
        else if(q[j] != p[i] && j == 0) {
            i++;
        }
    }
    return 0;
}



// int isCyclicRotation(string &p, string &q) 
// {
//     // Write your code here
//     return ((p+p).find(q) != string::npos);
// }


// int isCyclicRotation(string &p, string &q) 
// {
//     // Write your code here
//     for(int i = 0 ; i < p.length() ; i++) {
//         string temp = "";
//         for(int j = 0 ; j < p.length() ; j++) {
//             temp += p[(i+j)%p.length()];
//         }
//         if(temp == q) return 1;
//     }
//     return 0;
// }
