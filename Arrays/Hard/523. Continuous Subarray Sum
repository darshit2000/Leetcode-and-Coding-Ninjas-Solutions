// Duplicate reminder

class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) {
        int n = nums.size();
        if(n <= 1) return false;

        unordered_map<int,int> mpp;
        mpp[0] = -1;
        int sum = 0;
        for(int i = 0 ; i < n ; i++) {
            sum += nums[i];
            sum = sum % k;
            if(mpp.find(sum) == mpp.end()) mpp[sum] = i;
            else if(mpp.find(sum) != mpp.end() && i - mpp[sum] > 1) return true; 
            else if(mpp.find(sum) != mpp.end() && i - mpp[sum] <= 1) continue;      
        }
        return false;
    }
};
