// Approach 1

#include <bits/stdc++.h>

using namespace std;

string read(int n, vector<int> book, int target)
{
    // Write your code here.
    string s = "NO";
    vector<int> ans;
    for(int i = 0 ; i < n ; i++) {
        if(find(ans.begin(), ans.end() ,target - book[i]) != ans.end()) {
            s = "YES";
            break;
        }
        ans.push_back(book[i]);
    }
    return s;
}



// Approach 2

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int,int> mpp;
        int n = nums.size();
        vector<int> ans;

        for(int i = 0 ; i < n ; i++) {
            if(mpp.find(target-nums[i]) != mpp.end()) {
                ans.push_back(mpp[target-nums[i]]);
                ans.push_back(i);
                break;
            }
            mpp[nums[i]] = i;
        }
        return ans;
    }
};
