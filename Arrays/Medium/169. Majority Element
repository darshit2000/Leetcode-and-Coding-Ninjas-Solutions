class Solution {
public:
    int majorityElement(vector<int>& nums) {

        // Approach 1 : TC: O(n)  SC: O(1)

        int count = 0;
        int element = 0;
        int n = nums.size();

        if(n==1) return nums[0];

        for(int i = 0 ; i < n ; i++) {
            if(count == 0) element = nums[i];

            if(nums[i] == element) count++;
            else count--;
        }
        return element;


        // Approach 2 : TC: O(n)  SC: O(n)

        // map<int,int> mpp;
        // int n = nums.size();

        // for(int i = 0 ; i < n; i++) {
        //     mpp[nums[i]]++;
        //     if(mpp[nums[i]] > n/2) return nums[i];
        // }
        // return -1;
    }
};
