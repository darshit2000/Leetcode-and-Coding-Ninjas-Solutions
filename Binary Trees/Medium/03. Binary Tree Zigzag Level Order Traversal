/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(!root) return {};
        vector<vector<int>> ans;
        queue<TreeNode*> q;
        q.push(root);
        int level = 0;

        while(!q.empty()) {
            int size = q.size();
            vector<int> temp(size);

            for(int j = 0 ; j < size ; j++) {
                TreeNode *curr = q.front();
                q.pop();

                if(level % 2 == 0) temp[j] = curr->val;
                else temp[size - j - 1] = curr->val;

                if(curr->left) q.push(curr->left);
                if(curr->right) q.push(curr->right);
            }
            level++;
            ans.push_back(temp);
        }
        return ans;
    }
};
