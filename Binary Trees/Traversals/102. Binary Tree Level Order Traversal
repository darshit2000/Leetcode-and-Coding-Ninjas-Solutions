/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if(!root) return {};
        deque<TreeNode*> q;
        q.push_back(root);
        TreeNode* curr = NULL;
        vector<vector<int>> ans;
        vector<int> temp;

        while(!q.empty()) {
            int size = q.size();
            while(size--) {
                curr = q.front();
                q.pop_front();
                temp.push_back(curr->val);
                if(curr->left) q.push_back(curr->left);
                if(curr->right) q.push_back(curr->right);
            }
            ans.push_back(temp);
            temp.clear();
        }
        
        return ans;
    }
};
