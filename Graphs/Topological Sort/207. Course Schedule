https://leetcode.com/problems/course-schedule/description/

class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<vector<int>> adj(numCourses);
        vector<int> vis(numCourses, 0);
        vector<int> pathVisited(numCourses, 0);

        for(int i = 0 ; i < prerequisites.size() ; i++) {
            adj[prerequisites[i][1]].push_back(prerequisites[i][0]);
        }

        auto dfs = [&] (auto &dfs, int node) -> bool {
            vis[node] = 1;
            pathVisited[node] = 1;

            for(auto &neighbour : adj[node]) {
                if(vis[neighbour] == 0) {
                    if(dfs(dfs, neighbour) == true) return true;
                } else if(pathVisited[neighbour] == 1) return true;
            } 
            pathVisited[node] = 0;
            return false;
        };

        for(int i = 0 ; i < numCourses ; i++) {
            if(vis[i] == 0) {
                if(dfs(dfs, i) == true) return false;
            }
        }
        return true;
    }
};
