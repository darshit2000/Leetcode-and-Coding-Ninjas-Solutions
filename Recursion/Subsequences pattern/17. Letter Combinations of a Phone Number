class Solution {
public:
    void solve(string digits, string mapping[], string temp, vector<string> &ans, int index) {
        if(index >= digits.length()) {
            ans.push_back(temp);
            return;
        }

        int d = digits[index] - '0';
        string value = mapping[d];

        for(int i = 0 ; i < value.length(); i++) {
            temp += value[i];
            solve(digits, mapping, temp, ans, index+1);
            temp.pop_back();
        }
    }

    vector<string> letterCombinations(string digits) {
        if(digits.length() == 0) return {};
        string mapping[10] = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        vector<string> ans;
        string temp = "";
        int index = 0;
        solve(digits, mapping, temp, ans, index);
        return ans;
    }
};
