int fib(int n) {
    if(n == 0) {
        return 0;
    }
    if(n == 1) {
        return 1;
    }
    return (fib(n-1) + fib(n-2));
}

vector<int> generateFibonacciNumbers(int n) {
    // Write your code here.
    vector<int> ans;
    int i = 0;
    while(i < n) {
        ans.push_back(fib(i));
        i++;
    }
    
    return ans;
}


OR



void fact(long long i, long long n, long long &fact_val, vector<long long> &ans)
{
    
    if((fact_val*i) > n) return;
 
    fact_val *= i;
    ans.push_back(fact_val);
    fact(i+1, n, fact_val, ans);
}

vector<long long> factorialNumbers(long long n) {
    // Write Your Code Here
    vector<long long> ans;
    long long fact_val = 1;

    fact(1, n, fact_val, ans);

    return ans;
}
