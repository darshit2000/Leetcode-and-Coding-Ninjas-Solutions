// Method 1

string preToPost(string s) {
    // Write Your Code Here
    stack<string> stk;
    for(int i = s.length()-1 ; i >= 0 ; i--) {
        char ch = s[i];
        if(ch >= 'A' && ch <= 'Z') stk.push(string(1,ch));
        else {
            string inp1 = stk.top();
            stk.pop();
            string inp2 = stk.top();
            stk.pop();
            stk.push(inp1 + inp2 + ch);
        }
    }
    return stk.top();
}





// Method 2

// string preToInfix(string s) {
//     stack<string> stk;
//     for(int i = s.length()-1 ; i >= 0 ; i--) {
//         char ch = s[i];
//         if(ch >= 'A' && ch <= 'Z') stk.push(string(1,ch));
//         else {
//             string inp1 = stk.top();
//             stk.pop();
//             string inp2 = stk.top();
//             stk.pop();
//             stk.push("("+inp1+ch+inp2+")");
//         }
//     }
//     return stk.top();
// }

// int pref(char ch) {
//     if(ch == '+' || ch == '-') return 1;
//     else if(ch == '*' || ch == '/') return 2;
//     return -1;
// }

// string infixToPost(string s) {
//     stack<char> stk;
//     string ans = "";
//     for(int i = 0 ; i < s.length() ; i++) {
//         char ch = s[i];
//         if(ch >= 'A' && ch <= 'Z') {
//             ans += ch;
//         } else if(ch == '(' || stk.empty()) {
//             stk.push(ch);
//         } else if(ch == ')') {
//             while(stk.top() != '(') {
//                 ans += stk.top();
//                 stk.pop();
//             }
//             stk.pop();
//         } else {
//             while(!stk.empty() && pref(ch) <= pref(stk.top())) {
//                 ans += stk.top();
//                 stk.pop();
//             }
//             stk.push(ch);
//         }
//     }
//     while(!stk.empty()) {
//         ans += stk.top();
//         stk.pop();
//     }
//     return ans;
// }

// string preToPost(string s) {
//     // Write Your Code Here
//     return infixToPost(preToInfix(s));
// }
