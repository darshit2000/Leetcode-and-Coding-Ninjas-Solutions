bool isValidParenthesis(string s)
{
    // Write your code here.
    stack<char> stk;
    for(int i = 0 ; i < s.length() ; i++) {
        if(stk.empty()) {
            stk.push(s[i]);
        } else {
            if(s[i] == ')') {
                if(stk.top() == '(') stk.pop();
                else return false;
            } else if(s[i] == '}') {
                if(stk.top() == '{') stk.pop();
                else return false;
            } else if(s[i] == ']') {
                if(stk.top() == '[') stk.pop();
                else return false;
            } else {
                stk.push(s[i]);
            }
        }
    }
    if(stk.empty()) return true;
    return false;
}
