class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<pair<int,int>> dq;
        vector<int> ans;
        for(int i = 0 ; i < nums.size() ; i++) {
            while(!dq.empty() && (i - dq.front().second >= k)) dq.pop_front();

            while(!dq.empty() && dq.back().first <= nums[i]) dq.pop_back();

            dq.push_back(make_pair(nums[i],i));

            if(!dq.empty() && i >= k-1) ans.push_back(dq.front().first);        
        }
        return ans;
    }
};
